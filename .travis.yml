language: c

# To use Travis CI's newer container infrastructure, use the following
# line. (Also be sure RACKET_DIR is set to somewhere like ~/racket
# that doesn't require sudo.)
sudo: false

env:
  global:
    # Supply a global RACKET_DIR environment variable. This is where
    # Racket will be installed. A good idea is to use ~/racket because
    # that doesn't require sudo to install and is therefore compatible
    # with Travis CI's newer container infrastructure.
    - RACKET_DIR=~/racket
  matrix:
    # Supply at least one RACKET_VERSION environment variable. This is
    # used by the install-racket.sh script (run at before_install,
    # below) to select the version of Racket to download and install.
    #
    # Supply more than one RACKET_VERSION (as in the example below) to
    # create a Travis-CI build matrix to test against multiple Racket
    # versions.
    #
    # The RELEASE snapshot is only available during the release process.
    - RACKET_VERSION=5.3.4
    - RACKET_VERSION=5.3.5
    - RACKET_VERSION=5.92
    - RACKET_VERSION=6.0
    - RACKET_VERSION=6.1
    - RACKET_VERSION=6.1.1
    - RACKET_VERSION=6.2
    - RACKET_VERSION=HEAD
    - RACKET_VERSION=SCOPE_SNAPSHOT
    - RACKET_VERSION=RELEASE

# You may want to test against certain versions of Racket, without
# having them count against the overall success/failure.
matrix:
  allow_failures:
    - env: RACKET_VERSION=HEAD
    - env: RACKET_VERSION=HEAD RACKET_EDITION=MINIMAL
    - env: RACKET_VERSION=SCOPE_SNAPSHOT
    - env: RACKET_VERSION=RELEASE
  # Fast finish: Overall build result is determined as soon as any of
  # its rows have failed, or, all of its rows that aren't allowed to
  # fail have succeeded.
  fast_finish: true


before_install:
  - git clone https://github.com/greghendershott/travis-racket.git
  - cat travis-racket/install-racket.sh | bash # pipe to bash not sh!
  - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us

install:

before_script:

# Here supply steps such as raco make, raco test, etc.
#
# Tip: Use `raco pkg install --deps search-auto <pkg>` to install any
# required packages without getting stuck on a confirmation prompt.
script:
  - raco make main.rkt
  - raco test -x .

# NOTE: If your repo is a Racket package with an info.rkt that
# includes some `deps`, the following is more elegant:
#
# script:
# - cd ..   # Travis did a cd into the dir. Back up, for the next:
# - raco pkg install --deps search-auto --link <pkg>
# - raco test -x -p <pkg>

after_script:
