language: c

env:
  global:
    # Supply a global RACKET_DIR environment variable. This is where
    # Racket will be installed. A good idea is to use ~/racket because
    # that doesn't require sudo to install.
    - RACKET_DIR=~/racket
  matrix:
    # Supply at least one RACKET_VERSION environment variable. This is
    # used by the install-racket.sh script (run at before_install,
    # below) to select the version of Racket to download and install.
    #
    # Supply more than one RACKET_VERSION (as in the example below) to
    # create a Travis-CI build matrix to test against multiple Racket
    # versions.
    - RACKET_VERSION=6.1
    - RACKET_VERSION=6.1.1
    - RACKET_VERSION=6.2
    - RACKET_VERSION=6.3
    - RACKET_VERSION=6.4
    - RACKET_VERSION=6.5
    - RACKET_VERSION=6.6
    - RACKET_VERSION=6.7
    - RACKET_VERSION=6.8
    - RACKET_VERSION=6.9
    - RACKET_VERSION=6.10
    - RACKET_VERSION=6.11
    - RACKET_VERSION=6.12
    - RACKET_VERSION=7.0
    - RACKET_VERSION=7.1
    - RACKET_VERSION=7.2
    - RACKET_VERSION=7.3
    - RACKET_VERSION=7.4
    - RACKET_VERSION=7.5
    # "HEAD" is a daily snapshot built from the `master` branch.
    # This is the main variant of Racket that uses its own runtime.
    - RACKET_VERSION=HEAD
    # "HEADCS" is a daily snapshot built from the `master` branch.
    # This is an experimental variant of Racket that uses Chez Scheme.
    - RACKET_VERSION=HEADCS
    # "RELEASE" is a release candidate that updates only during the
    # weeks before a new release. The final release candidate should
    # remain available until the next release cycle. As a result, you
    # may leave this in your .travis.yml all the time. See:
    # <https://pre-release.racket-lang.org/>.
    - RACKET_VERSION=RELEASE

matrix:
  # You may want to test against certain versions of Racket, without
  # having them count against the overall success/failure. For example
  # here we include the development versions:
  allow_failures:
    - env: RACKET_VERSION=HEAD
    - env: RACKET_VERSION=HEADCS
    - env: RACKET_VERSION=RELEASE
  # Fast finish: Overall build result is determined as soon as any of
  # its rows have failed, or, all of its rows that aren't allowed to
  # fail have succeeded.
  fast_finish: true


before_install:
  # Repo history and other branches aren't useful here, so do a shallow clone
  # to only download the tip of the master branch of the repo.
  - git clone --depth 1 https://github.com/greghendershott/travis-racket.git
  - cat travis-racket/install-racket.sh | bash # pipe to bash not sh!
  - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us

install:

before_script:

# Here supply steps such as raco make, raco test, etc.
script:
  - raco make main.rkt
  - raco test -x .

# OR: If your repo is a Racket package with an info.rkt that includes
# some `deps`:
#
# script:
# - raco pkg install --deps search-auto
# - raco setup -D --check-pkg-deps <your-package-name>
# - raco test -x -p <your-package-name>

after_script:
